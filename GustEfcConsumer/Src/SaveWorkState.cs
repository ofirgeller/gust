using System;
using System.Collections.Generic;
using System.Linq;

namespace GustEfc.Src
{
    public class SaveWorkState
    {
        public SaveWorkState(List<EntityGroup> entitiesArray)
        {
            EntityInfoGroups = entitiesArray;
            SaveMap = EntityInfoGroups.ToDictionary(i => i.EntityType);
        }

        public void BeforeSave()
        {
            //SaveMap = new Dictionary<Type, List<EntityInfo>>();
            //EntityInfoGroups.ForEach(eg =>
            //{
            //    var entityInfos = eg.EntityInfos.Where(ei => ContextProvider.BeforeSaveEntity(ei)).ToList();
            //    SaveMap.Add(eg.EntityType, entityInfos);
            //});
            //SaveMap = ContextProvider.BeforeSaveEntities(SaveMap);
            //EntitiesWithAutoGeneratedKeys = SaveMap
            //  .SelectMany(eiGrp => eiGrp.Value)
            //  .Where(ei => ei.AutoGeneratedKey != null && ei.EntityState != EntityState.Detached)
            //  .ToList();
        }

        protected List<EntityGroup> EntityInfoGroups;
        public Dictionary<Type, EntityGroup> SaveMap { get; set; }
        public List<KeyMapping> KeyMappings;
        public List<EntityError> EntityErrors;
        public bool WasUsed { get; internal set; }
    }
}