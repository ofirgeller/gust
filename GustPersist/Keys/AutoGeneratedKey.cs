using System;
using System.Reflection;

namespace Gust.Persist
{
    /// <summary>
    /// The client is telling us that we should assume that a key will be auto generated in the DB.
    /// We use this class to store the temp value we give the property when it is send to the DB with the DB generated
    /// value we get back
    /// </summary>
    public class AutoGeneratedKey
    {
        public AutoGeneratedKey(Object entity, dynamic autoGeneratedKey)
        {
            Entity = entity;
            PropertyName = autoGeneratedKey.propertyName;
            AutoGeneratedKeyType = (AutoGeneratedKeyType)Enum.Parse(typeof(AutoGeneratedKeyType), (String)autoGeneratedKey.autoGeneratedKeyType);
            // TempValue and RealValue will be set later. - TempValue during Add, RealValue after save completes.
        }

        public Object Entity;
        public AutoGeneratedKeyType AutoGeneratedKeyType;
        public String PropertyName;
        public PropertyInfo Property
        {
            get
            {
                if (_property == null)
                {
                    _property = Entity.GetType().GetProperty(PropertyName,
                      BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);
                }
                return _property;
            }
        }
        public Object TempValue;
        public Object RealValue;
        PropertyInfo _property;
    }
}